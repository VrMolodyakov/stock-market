// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/service/token.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenStorage is a mock of TokenStorage interface.
type MockTokenStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTokenStorageMockRecorder
}

// MockTokenStorageMockRecorder is the mock recorder for MockTokenStorage.
type MockTokenStorageMockRecorder struct {
	mock *MockTokenStorage
}

// NewMockTokenStorage creates a new mock instance.
func NewMockTokenStorage(ctrl *gomock.Controller) *MockTokenStorage {
	mock := &MockTokenStorage{ctrl: ctrl}
	mock.recorder = &MockTokenStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenStorage) EXPECT() *MockTokenStorageMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockTokenStorage) Delete(refreshToken string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", refreshToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTokenStorageMockRecorder) Delete(refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTokenStorage)(nil).Delete), refreshToken)
}

// Get mocks base method.
func (m *MockTokenStorage) Get(refreshToken string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", refreshToken)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTokenStorageMockRecorder) Get(refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTokenStorage)(nil).Get), refreshToken)
}

// Set mocks base method.
func (m *MockTokenStorage) Set(refreshToken string, userId int, expireAt time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", refreshToken, userId, expireAt)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockTokenStorageMockRecorder) Set(refreshToken, userId, expireAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockTokenStorage)(nil).Set), refreshToken, userId, expireAt)
}
